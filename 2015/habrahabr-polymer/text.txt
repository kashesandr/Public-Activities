Вебкомпоненты -> Polymer 1.0 -> Пример

# Введение
## Кто я
Я - Александр Кашеверов, веб-разработчик, работаю в компании DataArt с 2011 года.
## О чём статья
Статья про веб-комоненты и Polymer с примером в конце.

# Web Components

## Немного истории
Веб был. Веб есть. И Веб будет. Технологии для веба были придуманы и внедрены исходя из лучшего решения на тот момент. Развитие технологий подталкиваются потребностями, поэтому мы эмпирическим путём дошли до того, до чего дошли :)
Бизнес требует создания крупных программных продуктов для Веба с широкой функциональностью, красотой, высокой производительностью. И бизнес готов вкладывать в это деньги. Но реализация порой упирается в сложность и специфичность Веба. Упростить разработку можно, если внедрить компонентный подход, где возможна изоляция и повторное использование. Мы в контексте веба, поэтому CSS не должен пересекаться, области видимости JS не должны пересекаться. HTML - хорошо бы не упираться в ограничения и иметь возможность создавать свои теги, к тому же теги должны быть совместими со стилями и JS.

## Коротко что это
Веб медленно, но верно, движется к компонентизации. Тот же Angular даёт возможность создавать компоненты с изолированной логикой и их достаточно просто переиспользовать, да и даже css можно вроде как "инкапсулировать" (https://github.com/Yappli/angular-css-injector). Последнее время начали набирать популярность веб компоненты. Если коротко, то они состоят и 4 основных частей:
- Custom Elements (создание своих html элементов)
- Shadow DOM (изоляция логики)
- Templates (всё понятно)
- HTML imports (вместо отдельного подключения css, js и картинок - можно подключать готовый компонент html, который сам изолированно все подключает)

## Поддержка браузерами
На данный момент 3 из 4 технологий находятся в стадии "Working Draft" на W3C.
Конечно, технологии не поддерживаются всеми браузерами.
Текущее состояние дел: http://caniuse.com/#search=components, http://jonrimmer.github.io/are-we-componentized-yet/
Так как вебкомпоненты в перспективе имеют высоую ценность для разработчиков, но еще не поддерживаются всеми браузерами, то создаются способы, чтобы технология-таки работала везде. Так родился проект http://webcomponents.org/. Используя его поддержка уже получше (https://github.com/webcomponents/webcomponentsjs#browser-support)

## полезные ссылки
https://learn.javascript.ru/webcomponents

# Polymer
Тем временем Google
## история
## коротко что это
## тестируемость
## update to version 1.0
## примеры работ
## альтернативы
## производительность
## vulcanize
## поддержка браузерами

# моя работа - chip-in.me

# Выводы
# Если есть ошибки - пишите личным сообщением. Спасибо!

# от себя
сначала была идея, потом решил что хочу полимер, но мотиватором стало выступление на летней практике, я пообещал, что выступлю
при изучении новой технологии мне проще не пользоваться boilerplate, а сначала узнать азы


chip-in.me github.com/kashesandr/CIC