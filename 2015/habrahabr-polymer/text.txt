Вебкомпоненты -> Polymer 1.0 -> Пример

# Введение

## Кто я
Я - Александр Кашеверов, веб-разработчик, работаю в компании DataArt с 2011 года.

## О чём статья
Статья про веб-комоненты и Polymer с примером в конце.

## Немного слов
Веб был. Веб есть. И Веб будет. Технологии для веба были придуманы и внедрены исходя из лучшего решения на тот момент. А развитие вебтехнологий подталкиваются потребностями, поэтому мы эмпирическим путём дошли до того, до чего дошли :)
Бизнес требует создания крупных программных продуктов для Веба с широкой функциональностью, красотой, высокой производительностью. И бизнес готов вкладывать в это деньги. Но реализация порой упирается в сложность и специфичность Веба. Упростить разработку можно, если внедрить компонентный подход, где возможна изоляция и повторное использование. Для больших команд это важно - чтобы разработка была максимально независима. Мы в контексте веба, поэтому CSS не должен пересекаться, области видимости JS не должны пересекаться. HTML - хорошо бы не упираться в ограничения и иметь возможность создавать свои теги, к тому же теги должны быть совместими со стилями и JS.

# Web Components

Веб медленно, но верно, движется к компонентизации. Тот же Angular даёт возможность создавать компоненты с изолированной логикой и их достаточно просто переиспользовать, и даже css можно "вроде как инкапсулировать" (https://github.com/Yappli/angular-css-injector). Последнее время начали набирать популярность веб компоненты.
Они начали свою историю в 2012 году. Если коротко, то состоят и 4 основных частей:
- Custom Elements (создание своих html элементов)
- Shadow DOM (изоляция логики)
- Templates (всё понятно)
- HTML imports (вместо отдельного подключения разных типов файлов [css, js, ..] - можно подключать готовый компонент html, который сам изолированно все подтягивает в документ)
Соединяя это всё вместе получаются изолированные независимые пеереиспользуемые части. Проще показать на примере. Наверняка, многие подключали в проект Bootstrap - для этого нужно отдельно прописать подгрузку стилей и скриптов. С компонентами это можно сделать проще: [code]<link rel="import" href="bootstrap.html"></link>[/code]
И наконец-то можно будет подключать google analytics вот например так: [code]<google-analytics domain="example.com" code="UA-XXXXX-Y"></google-analytics>[/code]
Web components - это не фреймворк. Это набор востребованных технологий в браузере.

## web components - поддержка браузерами
На данный момент 3 из 4 технологий находятся в стадии "Working Draft" на W3C.
И, конечно, технологии не поддерживаются всеми браузерами.
Текущее состояние дел: http://caniuse.com/#search=components, http://jonrimmer.github.io/are-we-componentized-yet/
Так как вебкомпоненты в перспективе имеют высоую ценность для разработчиков, но еще не поддерживаются всеми браузерами, то создаются способы, чтобы технология-таки работала везде. Так родился проект http://webcomponents.org/. Используя его поддержка бреузерами уже лучше (https://github.com/webcomponents/webcomponentsjs#browser-support)

## web components - полезные ссылки
https://learn.javascript.ru/webcomponents

# Polymer

?date
Тем временем Google решил всё упрощать и развивать. Взяли вебкомпоненты, полифилы и создали еще одну надстройку над всем этим. И получился проект Polymer.

## Polymer - коротко что это
Полимер из себя представляет те же вебкомпоненты в основе, полифилы для поддержки неподдерживающих браузеров, обернули в единую экосистему и связали вместе. А на основе этого создали набор примеров переиспользуемых компонентов. Разбили их на части:
 - Iron elements ()
 - Paper elements ()
 - Google web components ()
 - Gold elements ()
 - Neon elements ()
 - Platinum elements ()
 - Molecules ()
Polymer - это не фреймворк. Это обёртка и сахар. Я бы сравнил его с библиотекой jQuery. Но jQuery создана для работы с DOM, а Polymer для работы с web components.
Они недавно обновились.

## Polymer - тестируемость
Да, он тестируем (https://github.com/Polymer/web-component-tester)

## Polymer - update to version 1.0 (29 May 2015)
недавно вышел большой апдейт, теперь версия 1.0

## Polymer - примеры работ


## Polymer - альтернативы
http://bosonic.github.io/
http://x-tags.org/

## Polymer - производительность
Polymer.js performance on mobile platforms can often be somewhere between frustrating and problematic.

## Polymer - vulcanize
HTML imports feature -> into a single file

## Polymer - поддержка браузерами
У меня так и не получилось запустить на старом андроид-телефоне

## Polymer - почитать
https://www.youtube.com/watch?v=fD2As5RmM8Q

# Пример

# Выводы

# Если есть ошибки - пишите личным сообщением. Спасибо!

# от себя
сначала была идея, потом решил что хочу полимер, но мотиватором стало выступление на летней практике, я пообещал, что выступлю
при изучении новой технологии мне проще не пользоваться boilerplate, а сначала узнать азы


chip-in.me github.com/kashesandr/CIC